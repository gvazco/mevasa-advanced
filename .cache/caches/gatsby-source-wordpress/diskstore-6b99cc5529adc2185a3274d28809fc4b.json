{"expireTime":9007200895983077000,"key":"https://mevasa-gatsby.techosymantenimientos.com.mx/graphql--introspection-node-queries","val":{"categoriasPortafolios":{"typeInfo":{"singularName":"categoriaPortafolio","pluralName":"categoriasPortafolios","nodesTypeName":"CategoriaPortafolio"},"nodeListQueries":[" query NODE_LIST_QUERY($first:Int!,$after:String,){categoriasPortafolios(first:$first,after:$after,){nodes{ancestors(first:100){nodes{id}}wpChildren:children(first:100){nodes{id}}contentNodes(first:100){nodes{id __typename}}count databaseId description id isContentNode isTermNode link name wpParent:parent{node{id}}parentDatabaseId parentId proyectos(first:100){nodes{id}}slug taxonomy{node{id}}taxonomyName termGroupId termTaxonomyId uri __typename}pageInfo{hasNextPage endCursor}}}"],"nodeQuery":" query SINGLE_CONTENT_QUERY($id:ID!){categoriaPortafolio(id:$id){ancestors(first:100){nodes{id}}wpChildren:children(first:100){nodes{id}}contentNodes(first:100){nodes{id __typename}}count databaseId description id isContentNode isTermNode link name wpParent:parent{node{id}}parentDatabaseId parentId proyectos(first:100){nodes{id}}slug taxonomy{node{id}}taxonomyName termGroupId termTaxonomyId uri __typename}}","previewQuery":" query PREVIEW_QUERY($id:ID!){categoriaPortafolio(id:$id,idType:ID,asPreview:true){ancestors(first:100){nodes{id}}wpChildren:children(first:100){nodes{id}}contentNodes(first:100){nodes{id __typename}}count databaseId description id isContentNode isTermNode link name wpParent:parent{node{id}}parentDatabaseId parentId proyectos(first:100){nodes{id}}slug taxonomy{node{id}}taxonomyName termGroupId termTaxonomyId uri __typename}}","selectionSet":" \n        ancestors (first: 100) {\n           \n        nodes  {\n           id\n          \n        }\n      \n          \n        }\n      \n    \n        wpChildren: children (first: 100) {\n           \n        nodes  {\n           id\n          \n        }\n      \n          \n        }\n      \n    \n        contentNodes (first: 100) {\n           \n        nodes  {\n           id\n    __typename\n          \n        }\n      \n          \n        }\n      \n    count\n    databaseId\n    description\n    id\n    isContentNode\n    isTermNode\n    link\n    name\n    \n        wpParent: parent  {\n           \n        node  {\n           id\n          \n        }\n      \n          \n        }\n      \n    parentDatabaseId\n    parentId\n    \n        proyectos (first: 100) {\n           \n        nodes  {\n           id\n          \n        }\n      \n          \n        }\n      \n    slug\n    \n        taxonomy  {\n           \n        node  {\n           id\n          \n        }\n      \n          \n        }\n      \n    taxonomyName\n    termGroupId\n    termTaxonomyId\n    uri\n    __typename","builtFragments":"","settings":{}},"categoriasProductos":{"typeInfo":{"singularName":"categoriaProducto","pluralName":"categoriasProductos","nodesTypeName":"CategoriaProducto"},"nodeListQueries":[" query NODE_LIST_QUERY($first:Int!,$after:String,){categoriasProductos(first:$first,after:$after,){nodes{ancestors(first:100){nodes{id}}wpChildren:children(first:100){nodes{id}}contentNodes(first:100){nodes{id __typename}}count databaseId description id isContentNode isTermNode link name wpParent:parent{node{id}}parentDatabaseId parentId productos(first:100){nodes{id}}slug taxonomy{node{id}}taxonomyName termGroupId termTaxonomyId uri __typename}pageInfo{hasNextPage endCursor}}}"],"nodeQuery":" query SINGLE_CONTENT_QUERY($id:ID!){categoriaProducto(id:$id){ancestors(first:100){nodes{id}}wpChildren:children(first:100){nodes{id}}contentNodes(first:100){nodes{id __typename}}count databaseId description id isContentNode isTermNode link name wpParent:parent{node{id}}parentDatabaseId parentId productos(first:100){nodes{id}}slug taxonomy{node{id}}taxonomyName termGroupId termTaxonomyId uri __typename}}","previewQuery":" query PREVIEW_QUERY($id:ID!){categoriaProducto(id:$id,idType:ID,asPreview:true){ancestors(first:100){nodes{id}}wpChildren:children(first:100){nodes{id}}contentNodes(first:100){nodes{id __typename}}count databaseId description id isContentNode isTermNode link name wpParent:parent{node{id}}parentDatabaseId parentId productos(first:100){nodes{id}}slug taxonomy{node{id}}taxonomyName termGroupId termTaxonomyId uri __typename}}","selectionSet":" \n        ancestors (first: 100) {\n           \n        nodes  {\n           id\n          \n        }\n      \n          \n        }\n      \n    \n        wpChildren: children (first: 100) {\n           \n        nodes  {\n           id\n          \n        }\n      \n          \n        }\n      \n    \n        contentNodes (first: 100) {\n           \n        nodes  {\n           id\n    __typename\n          \n        }\n      \n          \n        }\n      \n    count\n    databaseId\n    description\n    id\n    isContentNode\n    isTermNode\n    link\n    name\n    \n        wpParent: parent  {\n           \n        node  {\n           id\n          \n        }\n      \n          \n        }\n      \n    parentDatabaseId\n    parentId\n    \n        productos (first: 100) {\n           \n        nodes  {\n           id\n          \n        }\n      \n          \n        }\n      \n    slug\n    \n        taxonomy  {\n           \n        node  {\n           id\n          \n        }\n      \n          \n        }\n      \n    taxonomyName\n    termGroupId\n    termTaxonomyId\n    uri\n    __typename","builtFragments":"","settings":{}},"categories":{"typeInfo":{"singularName":"category","pluralName":"categories","nodesTypeName":"Category"},"nodeListQueries":[" query NODE_LIST_QUERY($first:Int!,$after:String,){categories(first:$first,after:$after,){nodes{ancestors(first:100){nodes{id}}wpChildren:children(first:100){nodes{id}}contentNodes(first:100){nodes{id __typename}}count databaseId description id isContentNode isTermNode link name wpParent:parent{node{id}}parentDatabaseId parentId posts(first:100){nodes{id}}slug taxonomy{node{id}}taxonomyName termGroupId termTaxonomyId uri __typename}pageInfo{hasNextPage endCursor}}}"],"nodeQuery":" query SINGLE_CONTENT_QUERY($id:ID!){category(id:$id){ancestors(first:100){nodes{id}}wpChildren:children(first:100){nodes{id}}contentNodes(first:100){nodes{id __typename}}count databaseId description id isContentNode isTermNode link name wpParent:parent{node{id}}parentDatabaseId parentId posts(first:100){nodes{id}}slug taxonomy{node{id}}taxonomyName termGroupId termTaxonomyId uri __typename}}","previewQuery":" query PREVIEW_QUERY($id:ID!){category(id:$id,idType:ID,asPreview:true){ancestors(first:100){nodes{id}}wpChildren:children(first:100){nodes{id}}contentNodes(first:100){nodes{id __typename}}count databaseId description id isContentNode isTermNode link name wpParent:parent{node{id}}parentDatabaseId parentId posts(first:100){nodes{id}}slug taxonomy{node{id}}taxonomyName termGroupId termTaxonomyId uri __typename}}","selectionSet":" \n        ancestors (first: 100) {\n           \n        nodes  {\n           id\n          \n        }\n      \n          \n        }\n      \n    \n        wpChildren: children (first: 100) {\n           \n        nodes  {\n           id\n          \n        }\n      \n          \n        }\n      \n    \n        contentNodes (first: 100) {\n           \n        nodes  {\n           id\n    __typename\n          \n        }\n      \n          \n        }\n      \n    count\n    databaseId\n    description\n    id\n    isContentNode\n    isTermNode\n    link\n    name\n    \n        wpParent: parent  {\n           \n        node  {\n           id\n          \n        }\n      \n          \n        }\n      \n    parentDatabaseId\n    parentId\n    \n        posts (first: 100) {\n           \n        nodes  {\n           id\n          \n        }\n      \n          \n        }\n      \n    slug\n    \n        taxonomy  {\n           \n        node  {\n           id\n          \n        }\n      \n          \n        }\n      \n    taxonomyName\n    termGroupId\n    termTaxonomyId\n    uri\n    __typename","builtFragments":"","settings":{}},"comments":{"typeInfo":{"singularName":"comment","pluralName":"comments","nodesTypeName":"Comment"},"nodeListQueries":[" query NODE_LIST_QUERY($first:Int!,$after:String,){comments(first:$first,after:$after,){nodes{agent approved author{node{databaseId email id name url __typename ... on User{id}}}authorIp commentedOn{node{id __typename}}content databaseId date dateGmt id karma wpParent:parent{node{id}}parentDatabaseId parentId replies(first:100){nodes{id}}type __typename}pageInfo{hasNextPage endCursor}}}"],"nodeQuery":" query SINGLE_CONTENT_QUERY($id:ID!){comment(id:$id){agent approved author{node{databaseId email id name url __typename ... on User{id}}}authorIp commentedOn{node{id __typename}}content databaseId date dateGmt id karma wpParent:parent{node{id}}parentDatabaseId parentId replies(first:100){nodes{id}}type __typename}}","previewQuery":" query PREVIEW_QUERY($id:ID!){comment(id:$id,idType:ID,asPreview:true){agent approved author{node{databaseId email id name url __typename ... on User{id}}}authorIp commentedOn{node{id __typename}}content databaseId date dateGmt id karma wpParent:parent{node{id}}parentDatabaseId parentId replies(first:100){nodes{id}}type __typename}}","selectionSet":" agent\n    approved\n    \n        author  {\n           \n        node  {\n           databaseId\n    email\n    id\n    name\n    url\n          \n      __typename\n      \n  ... on User {\n     id\n  }\n\n    \n        }\n      \n          \n        }\n      \n    authorIp\n    \n        commentedOn  {\n           \n        node  {\n           id\n    __typename\n          \n        }\n      \n          \n        }\n      \n    content\n    databaseId\n    date\n    dateGmt\n    id\n    karma\n    \n        wpParent: parent  {\n           \n        node  {\n           id\n          \n        }\n      \n          \n        }\n      \n    parentDatabaseId\n    parentId\n    \n        replies (first: 100) {\n           \n        nodes  {\n           id\n          \n        }\n      \n          \n        }\n      \n    type\n    __typename","builtFragments":"","settings":{}},"contentTypes":{"typeInfo":{"singularName":"contentType","pluralName":"contentTypes","nodesTypeName":"ContentType"},"nodeListQueries":[" query NODE_LIST_QUERY($first:Int!,$after:String,){contentTypes(first:$first,after:$after,){nodes{archivePath canExport connectedTaxonomies(first:100){nodes{id}}contentNodes(first:100){nodes{id __typename}}deleteWithUser description excludeFromSearch graphqlPluralName graphqlSingleName hasArchive hierarchical id isContentNode isFrontPage isPostsPage isTermNode label labels{addNew addNewItem allItems archives attributes editItem featuredImage filterItemsList insertIntoItem itemsList itemsListNavigation menuName name newItem notFound notFoundInTrash parentItemColon removeFeaturedImage searchItems setFeaturedImage singularName uploadedToThisItem useFeaturedImage viewItem viewItems}menuIcon menuPosition name public publiclyQueryable restBase restControllerClass showInAdminBar showInGraphql showInMenu showInNavMenus showInRest showUi uri __typename}pageInfo{hasNextPage endCursor}}}"],"nodeQuery":" query SINGLE_CONTENT_QUERY($id:ID!){contentType(id:$id){archivePath canExport connectedTaxonomies(first:100){nodes{id}}contentNodes(first:100){nodes{id __typename}}deleteWithUser description excludeFromSearch graphqlPluralName graphqlSingleName hasArchive hierarchical id isContentNode isFrontPage isPostsPage isTermNode label labels{addNew addNewItem allItems archives attributes editItem featuredImage filterItemsList insertIntoItem itemsList itemsListNavigation menuName name newItem notFound notFoundInTrash parentItemColon removeFeaturedImage searchItems setFeaturedImage singularName uploadedToThisItem useFeaturedImage viewItem viewItems}menuIcon menuPosition name public publiclyQueryable restBase restControllerClass showInAdminBar showInGraphql showInMenu showInNavMenus showInRest showUi uri __typename}}","previewQuery":" query PREVIEW_QUERY($id:ID!){contentType(id:$id,idType:ID,asPreview:true){archivePath canExport connectedTaxonomies(first:100){nodes{id}}contentNodes(first:100){nodes{id __typename}}deleteWithUser description excludeFromSearch graphqlPluralName graphqlSingleName hasArchive hierarchical id isContentNode isFrontPage isPostsPage isTermNode label labels{addNew addNewItem allItems archives attributes editItem featuredImage filterItemsList insertIntoItem itemsList itemsListNavigation menuName name newItem notFound notFoundInTrash parentItemColon removeFeaturedImage searchItems setFeaturedImage singularName uploadedToThisItem useFeaturedImage viewItem viewItems}menuIcon menuPosition name public publiclyQueryable restBase restControllerClass showInAdminBar showInGraphql showInMenu showInNavMenus showInRest showUi uri __typename}}","selectionSet":" archivePath\n    canExport\n    \n        connectedTaxonomies (first: 100) {\n           \n        nodes  {\n           id\n          \n        }\n      \n          \n        }\n      \n    \n        contentNodes (first: 100) {\n           \n        nodes  {\n           id\n    __typename\n          \n        }\n      \n          \n        }\n      \n    deleteWithUser\n    description\n    excludeFromSearch\n    graphqlPluralName\n    graphqlSingleName\n    hasArchive\n    hierarchical\n    id\n    isContentNode\n    isFrontPage\n    isPostsPage\n    isTermNode\n    label\n    \n        labels  {\n           addNew\n    addNewItem\n    allItems\n    archives\n    attributes\n    editItem\n    featuredImage\n    filterItemsList\n    insertIntoItem\n    itemsList\n    itemsListNavigation\n    menuName\n    name\n    newItem\n    notFound\n    notFoundInTrash\n    parentItemColon\n    removeFeaturedImage\n    searchItems\n    setFeaturedImage\n    singularName\n    uploadedToThisItem\n    useFeaturedImage\n    viewItem\n    viewItems\n          \n        }\n      \n    menuIcon\n    menuPosition\n    name\n    public\n    publiclyQueryable\n    restBase\n    restControllerClass\n    showInAdminBar\n    showInGraphql\n    showInMenu\n    showInNavMenus\n    showInRest\n    showUi\n    uri\n    __typename","builtFragments":"","settings":{}},"mediaItems":{"typeInfo":{"singularName":"mediaItem","pluralName":"mediaItems","nodesTypeName":"MediaItem"},"nodeListQueries":[" query NODE_LIST_QUERY($first:Int!,$after:String,){mediaItems(first:$first,after:$after,){nodes{altText ancestors(first:100){nodes{id __typename}}author{node{id}}authorDatabaseId authorId caption wpChildren:children(first:100){nodes{id __typename}}commentCount commentStatus comments(first:100){nodes{id}}contentType{node{id}}databaseId date dateGmt description desiredSlug enclosure fileSize guid id isContentNode isTermNode lastEditedBy{node{id}}link mediaDetails{file height meta{aperture camera caption copyright createdTimestamp credit focalLength iso keywords orientation shutterSpeed title}sizes{file fileSize height mimeType name sourceUrl width}width}mediaItemUrl mediaType mimeType modified modifiedGmt wpParent:parent{node{id __typename}}parentDatabaseId parentId sizes slug sourceUrl srcSet status template{templateName __typename}title uri __typename}pageInfo{hasNextPage endCursor}}}"],"nodeQuery":" query SINGLE_CONTENT_QUERY($id:ID!){mediaItem(id:$id){altText ancestors(first:100){nodes{id __typename}}author{node{id}}authorDatabaseId authorId caption wpChildren:children(first:100){nodes{id __typename}}commentCount commentStatus comments(first:100){nodes{id}}contentType{node{id}}databaseId date dateGmt description desiredSlug enclosure fileSize guid id isContentNode isTermNode lastEditedBy{node{id}}link mediaDetails{file height meta{aperture camera caption copyright createdTimestamp credit focalLength iso keywords orientation shutterSpeed title}sizes{file fileSize height mimeType name sourceUrl width}width}mediaItemUrl mediaType mimeType modified modifiedGmt wpParent:parent{node{id __typename}}parentDatabaseId parentId sizes slug sourceUrl srcSet status template{templateName __typename}title uri __typename}}","previewQuery":" query PREVIEW_QUERY($id:ID!){mediaItem(id:$id,idType:ID,asPreview:true){altText ancestors(first:100){nodes{id __typename}}author{node{id}}authorDatabaseId authorId caption wpChildren:children(first:100){nodes{id __typename}}commentCount commentStatus comments(first:100){nodes{id}}contentType{node{id}}databaseId date dateGmt description desiredSlug enclosure fileSize guid id isContentNode isTermNode lastEditedBy{node{id}}link mediaDetails{file height meta{aperture camera caption copyright createdTimestamp credit focalLength iso keywords orientation shutterSpeed title}sizes{file fileSize height mimeType name sourceUrl width}width}mediaItemUrl mediaType mimeType modified modifiedGmt wpParent:parent{node{id __typename}}parentDatabaseId parentId sizes slug sourceUrl srcSet status template{templateName __typename}title uri __typename}}","selectionSet":" altText\n    \n        ancestors (first: 100) {\n           \n        nodes  {\n           id\n    __typename\n          \n        }\n      \n          \n        }\n      \n    \n        author  {\n           \n        node  {\n           id\n          \n        }\n      \n          \n        }\n      \n    authorDatabaseId\n    authorId\n    caption\n    \n        wpChildren: children (first: 100) {\n           \n        nodes  {\n           id\n    __typename\n          \n        }\n      \n          \n        }\n      \n    commentCount\n    commentStatus\n    \n        comments (first: 100) {\n           \n        nodes  {\n           id\n          \n        }\n      \n          \n        }\n      \n    \n        contentType  {\n           \n        node  {\n           id\n          \n        }\n      \n          \n        }\n      \n    databaseId\n    date\n    dateGmt\n    description\n    desiredSlug\n    enclosure\n    fileSize\n    guid\n    id\n    isContentNode\n    isTermNode\n    \n        lastEditedBy  {\n           \n        node  {\n           id\n          \n        }\n      \n          \n        }\n      \n    link\n    \n        mediaDetails  {\n           file\n    height\n    \n        meta  {\n           aperture\n    camera\n    caption\n    copyright\n    createdTimestamp\n    credit\n    focalLength\n    iso\n    keywords\n    orientation\n    shutterSpeed\n    title\n          \n        }\n      \n    \n        sizes  {\n           file\n    fileSize\n    height\n    mimeType\n    name\n    sourceUrl\n    width\n          \n        }\n      \n    width\n          \n        }\n      \n    mediaItemUrl\n    mediaType\n    mimeType\n    modified\n    modifiedGmt\n    \n        wpParent: parent  {\n           \n        node  {\n           id\n    __typename\n          \n        }\n      \n          \n        }\n      \n    parentDatabaseId\n    parentId\n    sizes\n    slug\n    sourceUrl\n    srcSet\n    status\n    \n        template  {\n           templateName\n          \n      __typename\n      \n    \n        }\n      \n    title\n    uri\n    __typename","builtFragments":"","settings":{"lazyNodes":false,"createFileNodes":true,"localFile":{"excludeByMimeTypes":[],"maxFileSizeBytes":15728640,"requestConcurrency":100}}},"menuItems":{"typeInfo":{"singularName":"menuItem","pluralName":"menuItems","nodesTypeName":"MenuItem"},"nodeListQueries":[" query NODE_LIST_QUERY($first:Int!,$after:String,){menuItems(first:$first,after:$after,){nodes{childItems(first:100){nodes{id}}connectedNode{node{id __typename}}cssClasses databaseId description id label linkRelationship locations menu{node{id}}order parentDatabaseId parentId path target title url __typename}pageInfo{hasNextPage endCursor}}}"],"nodeQuery":" query SINGLE_CONTENT_QUERY($id:ID!){menuItem(id:$id){childItems(first:100){nodes{id}}connectedNode{node{id __typename}}cssClasses databaseId description id label linkRelationship locations menu{node{id}}order parentDatabaseId parentId path target title url __typename}}","previewQuery":" query PREVIEW_QUERY($id:ID!){menuItem(id:$id,idType:ID,asPreview:true){childItems(first:100){nodes{id}}connectedNode{node{id __typename}}cssClasses databaseId description id label linkRelationship locations menu{node{id}}order parentDatabaseId parentId path target title url __typename}}","selectionSet":" \n        childItems (first: 100) {\n           \n        nodes  {\n           id\n          \n        }\n      \n          \n        }\n      \n    \n        connectedNode  {\n           \n        node  {\n           id\n    __typename\n          \n        }\n      \n          \n        }\n      \n    cssClasses\n    databaseId\n    description\n    id\n    label\n    linkRelationship\n    locations\n    \n        menu  {\n           \n        node  {\n           id\n          \n        }\n      \n          \n        }\n      \n    order\n    parentDatabaseId\n    parentId\n    path\n    target\n    title\n    url\n    __typename","builtFragments":"","settings":{}},"menus":{"typeInfo":{"singularName":"menu","pluralName":"menus","nodesTypeName":"Menu"},"nodeListQueries":[" query NODE_LIST_QUERY($first:Int!,$after:String,){menus(first:$first,after:$after,){nodes{count databaseId id locations menuItems(first:100){nodes{id}}name slug __typename}pageInfo{hasNextPage endCursor}}}"],"nodeQuery":" query SINGLE_CONTENT_QUERY($id:ID!){menu(id:$id){count databaseId id locations menuItems(first:100){nodes{id}}name slug __typename}}","previewQuery":" query PREVIEW_QUERY($id:ID!){menu(id:$id,idType:ID,asPreview:true){count databaseId id locations menuItems(first:100){nodes{id}}name slug __typename}}","selectionSet":" count\n    databaseId\n    id\n    locations\n    \n        menuItems (first: 100) {\n           \n        nodes  {\n           id\n          \n        }\n      \n          \n        }\n      \n    name\n    slug\n    __typename","builtFragments":"","settings":{}},"pages":{"typeInfo":{"singularName":"page","pluralName":"pages","nodesTypeName":"Page"},"nodeListQueries":[" query NODE_LIST_QUERY($first:Int!,$after:String,){pages(first:$first,after:$after,){nodes{ACF_HomePage{cta1Image{__typename id}cta1Link cta1Text cta2Image{__typename id}cta2Link cta2Text cta3Image{__typename id}cta3Link cta3Text fieldGroupName heroDescription heroImage{__typename id}heroText}ancestors(first:100){nodes{id __typename}}author{node{id}}authorDatabaseId authorId wpChildren:children(first:100){nodes{id __typename}}commentCount commentStatus comments(first:100){nodes{id}}content contentType{node{id}}databaseId date dateGmt desiredSlug enclosure featuredImage{node{__typename id}}featuredImageDatabaseId featuredImageId guid id isContentNode isFrontPage isPostsPage isPrivacyPage isRevision isTermNode lastEditedBy{node{id}}link menuOrder modified modifiedGmt wpParent:parent{node{id __typename}}parentDatabaseId parentId slug status template{templateName __typename}title uri __typename}pageInfo{hasNextPage endCursor}}}"],"nodeQuery":" query SINGLE_CONTENT_QUERY($id:ID!){page(id:$id){ACF_HomePage{cta1Image{__typename id}cta1Link cta1Text cta2Image{__typename id}cta2Link cta2Text cta3Image{__typename id}cta3Link cta3Text fieldGroupName heroDescription heroImage{__typename id}heroText}ancestors(first:100){nodes{id __typename}}author{node{id}}authorDatabaseId authorId wpChildren:children(first:100){nodes{id __typename}}commentCount commentStatus comments(first:100){nodes{id}}content contentType{node{id}}databaseId date dateGmt desiredSlug enclosure featuredImage{node{__typename id}}featuredImageDatabaseId featuredImageId guid id isContentNode isFrontPage isPostsPage isPrivacyPage isRevision isTermNode lastEditedBy{node{id}}link menuOrder modified modifiedGmt wpParent:parent{node{id __typename}}parentDatabaseId parentId slug status template{templateName __typename}title uri __typename}}","previewQuery":" query PREVIEW_QUERY($id:ID!){page(id:$id,idType:ID,asPreview:true){ACF_HomePage{cta1Image{__typename id}cta1Link cta1Text cta2Image{__typename id}cta2Link cta2Text cta3Image{__typename id}cta3Link cta3Text fieldGroupName heroDescription heroImage{__typename id}heroText}ancestors(first:100){nodes{id __typename}}author{node{id}}authorDatabaseId authorId wpChildren:children(first:100){nodes{id __typename}}commentCount commentStatus comments(first:100){nodes{id}}content contentType{node{id}}databaseId date dateGmt desiredSlug enclosure featuredImage{node{__typename id}}featuredImageDatabaseId featuredImageId guid id isContentNode isFrontPage isPostsPage isPrivacyPage isRevision isTermNode lastEditedBy{node{id}}link menuOrder modified modifiedGmt wpParent:parent{node{id __typename}}parentDatabaseId parentId slug status template{templateName __typename}title uri __typename}}","selectionSet":" \n        ACF_HomePage  {\n           \n        cta1Image  {\n           __typename\n    id\n          \n        }\n      \n    cta1Link\n    cta1Text\n    \n        cta2Image  {\n           __typename\n    id\n          \n        }\n      \n    cta2Link\n    cta2Text\n    \n        cta3Image  {\n           __typename\n    id\n          \n        }\n      \n    cta3Link\n    cta3Text\n    fieldGroupName\n    heroDescription\n    \n        heroImage  {\n           __typename\n    id\n          \n        }\n      \n    heroText\n          \n        }\n      \n    \n        ancestors (first: 100) {\n           \n        nodes  {\n           id\n    __typename\n          \n        }\n      \n          \n        }\n      \n    \n        author  {\n           \n        node  {\n           id\n          \n        }\n      \n          \n        }\n      \n    authorDatabaseId\n    authorId\n    \n        wpChildren: children (first: 100) {\n           \n        nodes  {\n           id\n    __typename\n          \n        }\n      \n          \n        }\n      \n    commentCount\n    commentStatus\n    \n        comments (first: 100) {\n           \n        nodes  {\n           id\n          \n        }\n      \n          \n        }\n      \n    content\n    \n        contentType  {\n           \n        node  {\n           id\n          \n        }\n      \n          \n        }\n      \n    databaseId\n    date\n    dateGmt\n    desiredSlug\n    enclosure\n    \n        featuredImage  {\n           \n        node  {\n           __typename\n    id\n          \n        }\n      \n          \n        }\n      \n    featuredImageDatabaseId\n    featuredImageId\n    guid\n    id\n    isContentNode\n    isFrontPage\n    isPostsPage\n    isPrivacyPage\n    isRevision\n    isTermNode\n    \n        lastEditedBy  {\n           \n        node  {\n           id\n          \n        }\n      \n          \n        }\n      \n    link\n    menuOrder\n    modified\n    modifiedGmt\n    \n        wpParent: parent  {\n           \n        node  {\n           id\n    __typename\n          \n        }\n      \n          \n        }\n      \n    parentDatabaseId\n    parentId\n    slug\n    status\n    \n        template  {\n           templateName\n          \n      __typename\n      \n    \n        }\n      \n    title\n    uri\n    __typename","builtFragments":"","settings":{}},"postFormats":{"typeInfo":{"singularName":"postFormat","pluralName":"postFormats","nodesTypeName":"PostFormat"},"nodeListQueries":[" query NODE_LIST_QUERY($first:Int!,$after:String,){postFormats(first:$first,after:$after,){nodes{contentNodes(first:100){nodes{id __typename}}count databaseId description id isContentNode isTermNode link name posts(first:100){nodes{id}}slug taxonomy{node{id}}taxonomyName termGroupId termTaxonomyId uri __typename}pageInfo{hasNextPage endCursor}}}"],"nodeQuery":" query SINGLE_CONTENT_QUERY($id:ID!){postFormat(id:$id){contentNodes(first:100){nodes{id __typename}}count databaseId description id isContentNode isTermNode link name posts(first:100){nodes{id}}slug taxonomy{node{id}}taxonomyName termGroupId termTaxonomyId uri __typename}}","previewQuery":" query PREVIEW_QUERY($id:ID!){postFormat(id:$id,idType:ID,asPreview:true){contentNodes(first:100){nodes{id __typename}}count databaseId description id isContentNode isTermNode link name posts(first:100){nodes{id}}slug taxonomy{node{id}}taxonomyName termGroupId termTaxonomyId uri __typename}}","selectionSet":" \n        contentNodes (first: 100) {\n           \n        nodes  {\n           id\n    __typename\n          \n        }\n      \n          \n        }\n      \n    count\n    databaseId\n    description\n    id\n    isContentNode\n    isTermNode\n    link\n    name\n    \n        posts (first: 100) {\n           \n        nodes  {\n           id\n          \n        }\n      \n          \n        }\n      \n    slug\n    \n        taxonomy  {\n           \n        node  {\n           id\n          \n        }\n      \n          \n        }\n      \n    taxonomyName\n    termGroupId\n    termTaxonomyId\n    uri\n    __typename","builtFragments":"","settings":{}},"posts":{"typeInfo":{"singularName":"post","pluralName":"posts","nodesTypeName":"Post"},"nodeListQueries":[" query NODE_LIST_QUERY($first:Int!,$after:String,){posts(first:$first,after:$after,){nodes{author{node{id}}authorDatabaseId authorId categories(first:100){nodes{id}}commentCount commentStatus comments(first:100){nodes{id}}content contentType{node{id}}databaseId date dateGmt desiredSlug enclosure excerpt featuredImage{node{__typename id}}featuredImageDatabaseId featuredImageId guid id isContentNode isRevision isSticky isTermNode lastEditedBy{node{id}}link modified modifiedGmt pingStatus pinged postFormats(first:100){nodes{id}}Seo{fieldGroupName seodescription seotitle}slug status tags(first:100){nodes{id}}template{templateName __typename}terms(first:100){nodes{id __typename}}title toPing uri __typename}pageInfo{hasNextPage endCursor}}}"],"nodeQuery":" query SINGLE_CONTENT_QUERY($id:ID!){post(id:$id){author{node{id}}authorDatabaseId authorId categories(first:100){nodes{id}}commentCount commentStatus comments(first:100){nodes{id}}content contentType{node{id}}databaseId date dateGmt desiredSlug enclosure excerpt featuredImage{node{__typename id}}featuredImageDatabaseId featuredImageId guid id isContentNode isRevision isSticky isTermNode lastEditedBy{node{id}}link modified modifiedGmt pingStatus pinged postFormats(first:100){nodes{id}}Seo{fieldGroupName seodescription seotitle}slug status tags(first:100){nodes{id}}template{templateName __typename}terms(first:100){nodes{id __typename}}title toPing uri __typename}}","previewQuery":" query PREVIEW_QUERY($id:ID!){post(id:$id,idType:ID,asPreview:true){author{node{id}}authorDatabaseId authorId categories(first:100){nodes{id}}commentCount commentStatus comments(first:100){nodes{id}}content contentType{node{id}}databaseId date dateGmt desiredSlug enclosure excerpt featuredImage{node{__typename id}}featuredImageDatabaseId featuredImageId guid id isContentNode isRevision isSticky isTermNode lastEditedBy{node{id}}link modified modifiedGmt pingStatus pinged postFormats(first:100){nodes{id}}Seo{fieldGroupName seodescription seotitle}slug status tags(first:100){nodes{id}}template{templateName __typename}terms(first:100){nodes{id __typename}}title toPing uri __typename}}","selectionSet":" \n        author  {\n           \n        node  {\n           id\n          \n        }\n      \n          \n        }\n      \n    authorDatabaseId\n    authorId\n    \n        categories (first: 100) {\n           \n        nodes  {\n           id\n          \n        }\n      \n          \n        }\n      \n    commentCount\n    commentStatus\n    \n        comments (first: 100) {\n           \n        nodes  {\n           id\n          \n        }\n      \n          \n        }\n      \n    content\n    \n        contentType  {\n           \n        node  {\n           id\n          \n        }\n      \n          \n        }\n      \n    databaseId\n    date\n    dateGmt\n    desiredSlug\n    enclosure\n    excerpt\n    \n        featuredImage  {\n           \n        node  {\n           __typename\n    id\n          \n        }\n      \n          \n        }\n      \n    featuredImageDatabaseId\n    featuredImageId\n    guid\n    id\n    isContentNode\n    isRevision\n    isSticky\n    isTermNode\n    \n        lastEditedBy  {\n           \n        node  {\n           id\n          \n        }\n      \n          \n        }\n      \n    link\n    modified\n    modifiedGmt\n    pingStatus\n    pinged\n    \n        postFormats (first: 100) {\n           \n        nodes  {\n           id\n          \n        }\n      \n          \n        }\n      \n    \n        Seo  {\n           fieldGroupName\n    seodescription\n    seotitle\n          \n        }\n      \n    slug\n    status\n    \n        tags (first: 100) {\n           \n        nodes  {\n           id\n          \n        }\n      \n          \n        }\n      \n    \n        template  {\n           templateName\n          \n      __typename\n      \n    \n        }\n      \n    \n        terms (first: 100) {\n           \n        nodes  {\n           id\n    __typename\n          \n        }\n      \n          \n        }\n      \n    title\n    toPing\n    uri\n    __typename","builtFragments":"","settings":{}},"productos":{"typeInfo":{"singularName":"producto","pluralName":"productos","nodesTypeName":"Producto"},"nodeListQueries":[" query NODE_LIST_QUERY($first:Int!,$after:String,){productos(first:$first,after:$after,){nodes{author{node{id}}authorDatabaseId authorId categoriasProductos(first:100){nodes{id}}commentCount commentStatus comments(first:100){nodes{id}}content contentType{node{id}}databaseId date dateGmt desiredSlug enclosure excerpt featuredImage{node{__typename id}}featuredImageDatabaseId featuredImageId FieldsProductos{fieldGroupName link precio textbutton textlabel}guid id isContentNode isTermNode lastEditedBy{node{id}}link modified modifiedGmt Seo{fieldGroupName seodescription seotitle}slug status template{templateName __typename}terms(first:100){nodes{id __typename}}title uri __typename}pageInfo{hasNextPage endCursor}}}"],"nodeQuery":" query SINGLE_CONTENT_QUERY($id:ID!){producto(id:$id){author{node{id}}authorDatabaseId authorId categoriasProductos(first:100){nodes{id}}commentCount commentStatus comments(first:100){nodes{id}}content contentType{node{id}}databaseId date dateGmt desiredSlug enclosure excerpt featuredImage{node{__typename id}}featuredImageDatabaseId featuredImageId FieldsProductos{fieldGroupName link precio textbutton textlabel}guid id isContentNode isTermNode lastEditedBy{node{id}}link modified modifiedGmt Seo{fieldGroupName seodescription seotitle}slug status template{templateName __typename}terms(first:100){nodes{id __typename}}title uri __typename}}","previewQuery":" query PREVIEW_QUERY($id:ID!){producto(id:$id,idType:ID,asPreview:true){author{node{id}}authorDatabaseId authorId categoriasProductos(first:100){nodes{id}}commentCount commentStatus comments(first:100){nodes{id}}content contentType{node{id}}databaseId date dateGmt desiredSlug enclosure excerpt featuredImage{node{__typename id}}featuredImageDatabaseId featuredImageId FieldsProductos{fieldGroupName link precio textbutton textlabel}guid id isContentNode isTermNode lastEditedBy{node{id}}link modified modifiedGmt Seo{fieldGroupName seodescription seotitle}slug status template{templateName __typename}terms(first:100){nodes{id __typename}}title uri __typename}}","selectionSet":" \n        author  {\n           \n        node  {\n           id\n          \n        }\n      \n          \n        }\n      \n    authorDatabaseId\n    authorId\n    \n        categoriasProductos (first: 100) {\n           \n        nodes  {\n           id\n          \n        }\n      \n          \n        }\n      \n    commentCount\n    commentStatus\n    \n        comments (first: 100) {\n           \n        nodes  {\n           id\n          \n        }\n      \n          \n        }\n      \n    content\n    \n        contentType  {\n           \n        node  {\n           id\n          \n        }\n      \n          \n        }\n      \n    databaseId\n    date\n    dateGmt\n    desiredSlug\n    enclosure\n    excerpt\n    \n        featuredImage  {\n           \n        node  {\n           __typename\n    id\n          \n        }\n      \n          \n        }\n      \n    featuredImageDatabaseId\n    featuredImageId\n    \n        FieldsProductos  {\n           fieldGroupName\n    link\n    precio\n    textbutton\n    textlabel\n          \n        }\n      \n    guid\n    id\n    isContentNode\n    isTermNode\n    \n        lastEditedBy  {\n           \n        node  {\n           id\n          \n        }\n      \n          \n        }\n      \n    link\n    modified\n    modifiedGmt\n    \n        Seo  {\n           fieldGroupName\n    seodescription\n    seotitle\n          \n        }\n      \n    slug\n    status\n    \n        template  {\n           templateName\n          \n      __typename\n      \n    \n        }\n      \n    \n        terms (first: 100) {\n           \n        nodes  {\n           id\n    __typename\n          \n        }\n      \n          \n        }\n      \n    title\n    uri\n    __typename","builtFragments":"","settings":{}},"proyectos":{"typeInfo":{"singularName":"proyecto","pluralName":"proyectos","nodesTypeName":"Proyecto"},"nodeListQueries":[" query NODE_LIST_QUERY($first:Int!,$after:String,){proyectos(first:$first,after:$after,){nodes{author{node{id}}authorDatabaseId authorId categoriasPortafolios(first:100){nodes{id}}commentCount commentStatus comments(first:100){nodes{id}}content contentType{node{id}}databaseId date dateGmt desiredSlug enclosure excerpt featuredImage{node{__typename id}}featuredImageDatabaseId featuredImageId FieldsProyectos{fieldGroupName place}guid id isContentNode isTermNode lastEditedBy{node{id}}link modified modifiedGmt Seo{fieldGroupName seodescription seotitle}slug status template{templateName __typename}terms(first:100){nodes{id __typename}}title uri __typename}pageInfo{hasNextPage endCursor}}}"],"nodeQuery":" query SINGLE_CONTENT_QUERY($id:ID!){proyecto(id:$id){author{node{id}}authorDatabaseId authorId categoriasPortafolios(first:100){nodes{id}}commentCount commentStatus comments(first:100){nodes{id}}content contentType{node{id}}databaseId date dateGmt desiredSlug enclosure excerpt featuredImage{node{__typename id}}featuredImageDatabaseId featuredImageId FieldsProyectos{fieldGroupName place}guid id isContentNode isTermNode lastEditedBy{node{id}}link modified modifiedGmt Seo{fieldGroupName seodescription seotitle}slug status template{templateName __typename}terms(first:100){nodes{id __typename}}title uri __typename}}","previewQuery":" query PREVIEW_QUERY($id:ID!){proyecto(id:$id,idType:ID,asPreview:true){author{node{id}}authorDatabaseId authorId categoriasPortafolios(first:100){nodes{id}}commentCount commentStatus comments(first:100){nodes{id}}content contentType{node{id}}databaseId date dateGmt desiredSlug enclosure excerpt featuredImage{node{__typename id}}featuredImageDatabaseId featuredImageId FieldsProyectos{fieldGroupName place}guid id isContentNode isTermNode lastEditedBy{node{id}}link modified modifiedGmt Seo{fieldGroupName seodescription seotitle}slug status template{templateName __typename}terms(first:100){nodes{id __typename}}title uri __typename}}","selectionSet":" \n        author  {\n           \n        node  {\n           id\n          \n        }\n      \n          \n        }\n      \n    authorDatabaseId\n    authorId\n    \n        categoriasPortafolios (first: 100) {\n           \n        nodes  {\n           id\n          \n        }\n      \n          \n        }\n      \n    commentCount\n    commentStatus\n    \n        comments (first: 100) {\n           \n        nodes  {\n           id\n          \n        }\n      \n          \n        }\n      \n    content\n    \n        contentType  {\n           \n        node  {\n           id\n          \n        }\n      \n          \n        }\n      \n    databaseId\n    date\n    dateGmt\n    desiredSlug\n    enclosure\n    excerpt\n    \n        featuredImage  {\n           \n        node  {\n           __typename\n    id\n          \n        }\n      \n          \n        }\n      \n    featuredImageDatabaseId\n    featuredImageId\n    \n        FieldsProyectos  {\n           fieldGroupName\n    place\n          \n        }\n      \n    guid\n    id\n    isContentNode\n    isTermNode\n    \n        lastEditedBy  {\n           \n        node  {\n           id\n          \n        }\n      \n          \n        }\n      \n    link\n    modified\n    modifiedGmt\n    \n        Seo  {\n           fieldGroupName\n    seodescription\n    seotitle\n          \n        }\n      \n    slug\n    status\n    \n        template  {\n           templateName\n          \n      __typename\n      \n    \n        }\n      \n    \n        terms (first: 100) {\n           \n        nodes  {\n           id\n    __typename\n          \n        }\n      \n          \n        }\n      \n    title\n    uri\n    __typename","builtFragments":"","settings":{}},"tags":{"typeInfo":{"singularName":"tag","pluralName":"tags","nodesTypeName":"Tag"},"nodeListQueries":[" query NODE_LIST_QUERY($first:Int!,$after:String,){tags(first:$first,after:$after,){nodes{contentNodes(first:100){nodes{id __typename}}count databaseId description id isContentNode isTermNode link name posts(first:100){nodes{id}}slug taxonomy{node{id}}taxonomyName termGroupId termTaxonomyId uri __typename}pageInfo{hasNextPage endCursor}}}"],"nodeQuery":" query SINGLE_CONTENT_QUERY($id:ID!){tag(id:$id){contentNodes(first:100){nodes{id __typename}}count databaseId description id isContentNode isTermNode link name posts(first:100){nodes{id}}slug taxonomy{node{id}}taxonomyName termGroupId termTaxonomyId uri __typename}}","previewQuery":" query PREVIEW_QUERY($id:ID!){tag(id:$id,idType:ID,asPreview:true){contentNodes(first:100){nodes{id __typename}}count databaseId description id isContentNode isTermNode link name posts(first:100){nodes{id}}slug taxonomy{node{id}}taxonomyName termGroupId termTaxonomyId uri __typename}}","selectionSet":" \n        contentNodes (first: 100) {\n           \n        nodes  {\n           id\n    __typename\n          \n        }\n      \n          \n        }\n      \n    count\n    databaseId\n    description\n    id\n    isContentNode\n    isTermNode\n    link\n    name\n    \n        posts (first: 100) {\n           \n        nodes  {\n           id\n          \n        }\n      \n          \n        }\n      \n    slug\n    \n        taxonomy  {\n           \n        node  {\n           id\n          \n        }\n      \n          \n        }\n      \n    taxonomyName\n    termGroupId\n    termTaxonomyId\n    uri\n    __typename","builtFragments":"","settings":{}},"taxonomies":{"typeInfo":{"singularName":"taxonomy","pluralName":"taxonomies","nodesTypeName":"Taxonomy"},"nodeListQueries":[" query NODE_LIST_QUERY($first:Int!,$after:String,){taxonomies(first:$first,after:$after,){nodes{archivePath connectedContentTypes(first:100){nodes{id}}description graphqlPluralName graphqlSingleName hierarchical id label name public restBase restControllerClass showCloud showInAdminColumn showInGraphql showInMenu showInNavMenus showInQuickEdit showInRest showUi __typename}pageInfo{hasNextPage endCursor}}}"],"nodeQuery":" query SINGLE_CONTENT_QUERY($id:ID!){taxonomy(id:$id){archivePath connectedContentTypes(first:100){nodes{id}}description graphqlPluralName graphqlSingleName hierarchical id label name public restBase restControllerClass showCloud showInAdminColumn showInGraphql showInMenu showInNavMenus showInQuickEdit showInRest showUi __typename}}","previewQuery":" query PREVIEW_QUERY($id:ID!){taxonomy(id:$id,idType:ID,asPreview:true){archivePath connectedContentTypes(first:100){nodes{id}}description graphqlPluralName graphqlSingleName hierarchical id label name public restBase restControllerClass showCloud showInAdminColumn showInGraphql showInMenu showInNavMenus showInQuickEdit showInRest showUi __typename}}","selectionSet":" archivePath\n    \n        connectedContentTypes (first: 100) {\n           \n        nodes  {\n           id\n          \n        }\n      \n          \n        }\n      \n    description\n    graphqlPluralName\n    graphqlSingleName\n    hierarchical\n    id\n    label\n    name\n    public\n    restBase\n    restControllerClass\n    showCloud\n    showInAdminColumn\n    showInGraphql\n    showInMenu\n    showInNavMenus\n    showInQuickEdit\n    showInRest\n    showUi\n    __typename","builtFragments":"","settings":{}},"userRoles":{"typeInfo":{"singularName":"userRole","pluralName":"userRoles","nodesTypeName":"UserRole"},"nodeListQueries":[" query NODE_LIST_QUERY($first:Int!,$after:String,){userRoles(first:$first,after:$after,){nodes{capabilities displayName id name __typename}pageInfo{hasNextPage endCursor}}}"],"nodeQuery":" query SINGLE_CONTENT_QUERY($id:ID!){userRole(id:$id){capabilities displayName id name __typename}}","previewQuery":" query PREVIEW_QUERY($id:ID!){userRole(id:$id,idType:ID,asPreview:true){capabilities displayName id name __typename}}","selectionSet":" capabilities\n    displayName\n    id\n    name\n    __typename","builtFragments":"","settings":{}},"users":{"typeInfo":{"singularName":"user","pluralName":"users","nodesTypeName":"User"},"nodeListQueries":[" query NODE_LIST_QUERY($first:Int!,$after:String,){users(first:$first,after:$after,){nodes{avatar{default extraAttr forceDefault foundAvatar height rating scheme size url width}capKey capabilities comments(first:100){nodes{id}}databaseId description email extraCapabilities firstName id isContentNode isTermNode lastName locale name nicename nickname pages(first:100){nodes{id}}posts(first:100){nodes{id}}productos(first:100){nodes{id}}proyectos(first:100){nodes{id}}registeredDate roles(first:100){nodes{id}}slug uri url username __typename}pageInfo{hasNextPage endCursor}}}"],"nodeQuery":" query SINGLE_CONTENT_QUERY($id:ID!){user(id:$id){avatar{default extraAttr forceDefault foundAvatar height rating scheme size url width}capKey capabilities comments(first:100){nodes{id}}databaseId description email extraCapabilities firstName id isContentNode isTermNode lastName locale name nicename nickname pages(first:100){nodes{id}}posts(first:100){nodes{id}}productos(first:100){nodes{id}}proyectos(first:100){nodes{id}}registeredDate roles(first:100){nodes{id}}slug uri url username __typename}}","previewQuery":" query PREVIEW_QUERY($id:ID!){user(id:$id,idType:ID,asPreview:true){avatar{default extraAttr forceDefault foundAvatar height rating scheme size url width}capKey capabilities comments(first:100){nodes{id}}databaseId description email extraCapabilities firstName id isContentNode isTermNode lastName locale name nicename nickname pages(first:100){nodes{id}}posts(first:100){nodes{id}}productos(first:100){nodes{id}}proyectos(first:100){nodes{id}}registeredDate roles(first:100){nodes{id}}slug uri url username __typename}}","selectionSet":" \n        avatar  {\n           default\n    extraAttr\n    forceDefault\n    foundAvatar\n    height\n    rating\n    scheme\n    size\n    url\n    width\n          \n        }\n      \n    capKey\n    capabilities\n    \n        comments (first: 100) {\n           \n        nodes  {\n           id\n          \n        }\n      \n          \n        }\n      \n    databaseId\n    description\n    email\n    extraCapabilities\n    firstName\n    id\n    isContentNode\n    isTermNode\n    lastName\n    locale\n    name\n    nicename\n    nickname\n    \n        pages (first: 100) {\n           \n        nodes  {\n           id\n          \n        }\n      \n          \n        }\n      \n    \n        posts (first: 100) {\n           \n        nodes  {\n           id\n          \n        }\n      \n          \n        }\n      \n    \n        productos (first: 100) {\n           \n        nodes  {\n           id\n          \n        }\n      \n          \n        }\n      \n    \n        proyectos (first: 100) {\n           \n        nodes  {\n           id\n          \n        }\n      \n          \n        }\n      \n    registeredDate\n    \n        roles (first: 100) {\n           \n        nodes  {\n           id\n          \n        }\n      \n          \n        }\n      \n    slug\n    uri\n    url\n    username\n    __typename","builtFragments":"","settings":{}}}}